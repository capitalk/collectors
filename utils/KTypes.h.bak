#ifndef CAPK_OB_TYPES
#define CAPK_OB_TYPES

#include <stdint.h>
#include <boost/shared_ptr.hpp>
#include <set>
#include <map>
#include <list>

#include "order_book.h"
#include "limit.h"
#include "order.h"


namespace capk 
{
//class KLimit;
//class KOrder;
//class KBook;
//
typedef enum {
    BUY=0,
    SELL=1
} buy_sell_t;


enum TickType {
    QUOTE = 'Q',
    TRADE  = 'T'
};

enum Side {
    BID = 0,
    ASK = 1
};
typedef Side Side_t;


}
/*
struct KLimitComp;

//typedef uint32_t Volume;

typedef boost::shared_ptr<capk::KLimit> pKLimit;

typedef std::set<pKLimit, KLimitComp> KTree;
                                            
typedef boost::shared_ptr<capk::KOrder> pKOrder;

typedef std::list<pKOrder> Orders;

typedef std::map<uint32_t, pKOrder> KOrderMap;

typedef uint32_t orderId_t;
*/
inline capk::buy_sell_t char2buy_sell_t(char s) { 
    if (s == '0') { 
        return capk::BUY; 
    } else if(s == '1') { 
        return capk::SELL; 
    }  
}

inline capk::Side_t char2side_t(char c) { 
    if (c == '0') { 
        return capk::BID; 
    } else if(c == '1') { 
        return capk::ASK; 
    }  
}
/*
struct BBO{
    double bestBid;
    double bestBidVol;
    double bestAsk;  
    double bestAskVol;  
    char* mic;
};
*/


#endif // CAPK_OB_TYPES
